    string convert(string s, int numRows) {
        int ch=0,step,i=0,col=0,j;
        if(numRows>1){
            step = numRows-2;
        }
        else{
            return s;
        }
        while(i<s.length()){
            if(ch==0){
                i+=numRows;
                col++;
                ch=1;
            }
            else if(ch==1){
                i+=step;
                col+=step;
                ch=0;
            }
        }
        char mat[numRows][col];
        for(i=0 ; i<numRows ; i++){
            for(int j=0 ; j<col ; j++){
                mat[i][j]='0';
            }
        }
        ch=0;
        int row=0,column=0;
        i=0;
        while(i<s.length()){
            if(ch==0){
                if(row==numRows){
                    row--;
                    ch=1;
                    continue;
                }
                mat[row][column]=s[i];
                row++;
            }
            else if(ch==1){
                if(row==0){
                    ch=0;
                    row++;
                    continue;
                }
                row--;
                column++;
                mat[row][column]=s[i];
            }
            i++;
        }
        string ans="";
        for(i=0 ; i<numRows ; i++){
            for(j=0 ; j<col ; j++){
                if(mat[i][j]!='0'){
                    ans+=mat[i][j];
                }
            }
        }
        //cout<<col;
        return ans;
    }
